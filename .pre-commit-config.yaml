repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-xml
      - id: check-toml
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-executables-have-shebangs

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=88]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        additional_dependencies: [types-all, pydantic, sqlalchemy]
        args: [--ignore-missing-imports, --no-strict-optional]
        files: ^(services|shared)/

  # Security scanning
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, services/, -f, json, -o, bandit-report.json]
        files: ^services/

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types: [yaml]
        exclude: ^\.github/

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck

  # Commit message conventions
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Additional Python checks
  - repo: local
    hooks:
      # Check for print statements in production code
      - id: check-print-statements
        name: Check for print statements
        entry: python -c "import sys, re; sys.exit(bool(re.search(r'^[^#]*print\s*\(', open(sys.argv[1]).read(), re.MULTILINE)))"
        language: system
        files: ^services/.*\.py$
        exclude: (test_|tests/)

      # Check for TODO/FIXME comments
      - id: check-todos
        name: Check for TODO/FIXME comments
        entry: python -c "import sys, re; content=open(sys.argv[1]).read(); todos=re.findall(r'(TODO|FIXME|HACK):', content); print(f'Found {len(todos)} TODO/FIXME comments') if todos else None"
        language: system
        files: ^services/.*\.py$
        verbose: true

      # Validate XML schema files
      - id: validate-xml-schema
        name: Validate XML schemas
        entry: xmllint --noout --schema
        language: system
        files: ^schemas/.*\.xsd$

      # Check Docker Compose syntax
      - id: check-docker-compose
        name: Check docker-compose syntax
        entry: docker-compose config -q
        language: system
        files: docker-compose.*\.ya?ml$
        pass_filenames: false

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false